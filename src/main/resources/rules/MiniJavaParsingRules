PROGRAM_DECLARATION : (CLASS)*;
CLASS_DECLARATION : CLASS IDENTIFIER LBRACE (FIELD_DECLARATION)* (METHOD_DECLARATION)* RBRACE;
METHOD_DECLARATION : PUBLIC TYPE IDENTIFIER LPAREN (PARAMETER (COMMA PARAMETER)*)? RPAREN LBRACE (VARIABLE_DECLARATION)* (STATEMENT)* RETURN EXPRESSION SEMI RBRACE;
FIELD_DECLARATION : TYPE IDENTIFIER SEMI;
VARIABLE_DECLARATION : TYPE IDENTIFIER SEMI;
PARAMETER : TYPE IDENTIFIER;
TYPE : ARRAY_TYPE
    |   VOID_TYPE
	| 	PRIMITIVE_TYPE
	| 	CLASS_TYPE;
VOID_TYPE : VOID;
PRIMITIVE_TYPE : INT
    |   BOOLEAN;
CLASS_TYPE : IDENTIFIER;
ARRAY_TYPE : TYPE LBRACKET RBRACKET;
STATEMENT : BLOCK_STATEMENT
    |   EXPRESSION_STATEMENT
	| 	IF_STATEMENT
	| 	WHILE_STATEMENT
	|   RETURN_STATEMENT;
BLOCK_STATEMENT : LBRACE (STATEMENT)* RBRACE;
EXPRESSION_STATEMENT : EXPRESSION SEMI;
IF_STATEMENT : IF LPAREN EXPRESSION RPAREN BLOCK_STATEMENT ELSE BLOCK_STATEMENT;
WHILE_STATEMENT : WHILE LPAREN EXPRESSION RPAREN BLOCK_STATEMENT;
RETURN_STATEMENT : RETURN EXPRESSION_STATEMENT;
EXPRESSION : UNARY_EXPRESSION
    |   BINARY_EXPRESSION
    |   ASSIGN_EXPRESSION
	| 	ARRAY_ACCESS_EXPRESSION
	| 	FIELD_ACCESS_EXPRESSION
	|   METHOD_CALL_EXPRESSION
	| 	METHOD_REFERENCE_EXPRESSION
	| 	LITERAL_EXPRESSION
	| 	VARIABLE_EXPRESSION
	| 	THIS_EXPRESSION
	|   ARRAY_ACCESS_EXPRESSION
	| 	ARRAY_CREATION_EXPRESSION
	| 	OBJECT_CREATION_EXPRESSION
	| 	ENCLOSED_EXPRESSION;
ASSIGN_EXPRESSION : EXPRESSION (EQ | CARETEQ | PLUSEQ | SUBEQ | STAREQ | SLASHEQ | AMPEQ | BAREQ | PERCENTEQ) EXPRESSION;
UNARY_EXPRESSION : ARITHMETIC_UNARY_EXPRESSION
    |   BOOLEAN_UNARY_EXPRESSION;
ARITHMETIC_UNARY_EXPRESSION : (PLUSPLUS | SUBSUB | PLUS | MINUS) EXPRESSION
    |   EXPRESSION (PLUSPLUS | SUBSUB);
BOOLEAN_UNARY_EXPRESSION : (TILDE | BANG) EXPRESSION;
BINARY_EXPRESSION : ARITHMETIC_BINARY_EXPRESSION
    |   BOOLEAN_BINARY_EXPRESSION;
ARITHMETIC_BINARY_EXPRESSION : ARITHMETIC_OPERATION_EXPRESSION
    |   ARITHMETIC_COMPARE_EXPRESSION;
BOOLEAN_BINARY_EXPRESSION : BOOLEAN_OPERATION_EXPRESSION
    |   BOOLEAN_COMPARE_EXPRESSION;
ARITHMETIC_OPERATION_EXPRESSION : EXPRESSION (AMP | CARET | BAR | LT LT | GT GT | GT GT GT | PLUS | SUB | STAR | SLASH | PERCENT) EXPRESSION;
BOOLEAN_OPERATION_EXPRESSION : EXPRESSION (AMPAMP | BARBAR) EXPRESSION;
ARITHMETIC_COMPARE_EXPRESSION : EXPRESSION (LT | GT | LT EQ | GT EQ | EQEQ | BANGEQ) EXPRESSION;
BOOLEAN_COMPARE_EXPRESSION : EXPRESSION (EQEQ | BANGEQ) EXPRESSION;
ENCLOSED_EXPRESSION : LPAREN EXPRESSION RPAREN;
THIS_EXPRESSION : THIS;
METHOD_CALL_EXPRESSION : EXPRESSION DOT IDENTIFIER LPAREN (EXPRESSION (COMMA EXPRESSION)*)? RPAREN;
METHOD_REFERENCE_EXPRESSION : IDENTIFIER LPAREN (EXPRESSION (COMMA EXPRESSION)*)? RPAREN;
LITERAL_EXPRESSION : NULL_LITERAL_EXPRESSION
    |   INTEGER_LITERAL_EXPRESSION
    |   BOOLEAN_LITERAL_EXPRESSION;
NULL_LITERAL_EXPRESSION : NULL;
INTEGER_LITERAL_EXPRESSION : INTEGER_LITERAL;
BOOLEAN_LITERAL_EXPRESSION : BOOLEAN_LITERAL;
VARIABLE_EXPRESSION : IDENTIFIER;
FIELD_ACCESS_EXPRESSION : EXPRESSION DOT IDENTIFIER;
ARRAY_ACCESS_EXPRESSION : EXPRESSION LBRACKET EXPRESSION RBRACKET;
OBJECT_CREATION_EXPRESSION : NEW IDENTIFIER LPAREN RPAREN;
ARRAY_CREATION_EXPRESSION : NEW TYPE LBRACKET EXPRESSION RBRACKET;